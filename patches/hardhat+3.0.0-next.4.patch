diff --git a/node_modules/hardhat/dist/src/internal/builtin-plugins/solidity/build-system/compilation-job.js b/node_modules/hardhat/dist/src/internal/builtin-plugins/solidity/build-system/compilation-job.js
index c250a14..321edb6 100644
--- a/node_modules/hardhat/dist/src/internal/builtin-plugins/solidity/build-system/compilation-job.js
+++ b/node_modules/hardhat/dist/src/internal/builtin-plugins/solidity/build-system/compilation-job.js
@@ -75,15 +75,55 @@ export class CompilationJobImplementation {
                 "": ["ast"],
             },
         };
-        // TODO: Deep merge the user output selection with the default one
-        const outputSelection = defaultOutputSelection;
+
+        // TODO: export this function somewhere as helper
+        const mergeOutputSelection = (
+            selectionA = {},
+            selectionB = {},
+        ) => {
+            const result = {};
+
+            const fileKeys = Array.from(
+                new Set([...Object.keys(selectionA), ...Object.keys(selectionB)]),
+            ).sort();
+
+            for (const fileKey of fileKeys) {
+                const contractKeys = Array.from(
+                    new Set([
+                        ...Object.keys(selectionA[fileKey] ?? {}),
+                        ...Object.keys(selectionB[fileKey] ?? {}),
+                    ]),
+                ).sort();
+
+                for (const contractKey of contractKeys) {
+                    const values = Array.from(
+                        new Set([
+                        ...(selectionA[fileKey]?.[contractKey] ?? []),
+                        ...(selectionB[fileKey]?.[contractKey] ?? []),
+                        ]),
+                    ).sort();
+
+                    if (values.length > 0) {
+                        result[fileKey] = {};
+                        result[fileKey][contractKey] = values;
+                    }
+                }
+            }
+
+            return result;
+        };
+
         return {
             language: "Solidity",
             settings: {
                 ...settings,
-                evmVersion: settings.evmVersion ??
-                    getEvmVersionFromSolcVersion(this.solcConfig.version),
-                outputSelection,
+                evmVersion:
+                settings.evmVersion ??
+                getEvmVersionFromSolcVersion(this.solcConfig.version),
+                outputSelection: mergeOutputSelection(
+                    defaultOutputSelection,
+                    settings.outputSelection,
+                ),
                 remappings: this.#remappings.map(formatRemapping),
             },
         };
